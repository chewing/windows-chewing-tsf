name: CI

env:
  VER_MAJOR: 25
  VER_MINOR: 8
  VER_PATCH: 1

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  merge_group:
    types: [checks_requested]
  workflow_call:
    inputs:
      nightly:
        description: "Update all submodules to build nightly build"
        default: true
        required: true
        type: boolean
    outputs:
      unsigned-artifact-id:
        description: "Unsigned Installer"
        value: ${{ jobs.package.outputs.unsigned-artifact-id }}

jobs:
  cross-build:
    runs-on: ubuntu-latest
    container: quay.io/fedora/fedora:42
    name: Cross Build
    steps:
      - name: Install build dependencies
        run: |
          sudo dnf -y install clang rustup git
          sudo dnf -y install mingw32-binutils mingw32-gcc
          sudo dnf -y install mingw64-binutils mingw64-gcc
          rustup-init -y
          source "$HOME/.cargo/env"
          rustup set auto-self-update disable
          rustup target add i686-pc-windows-gnu
          rustup target add x86_64-pc-windows-gnu
          cargo install --git https://github.com/chewing/libchewing chewing-cli --features sqlite-bundled
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - uses: actions/checkout@v5
        with:
          submodules: true

      - uses: Swatinem/rust-cache@v2

      - name: Generate nightly version info
        if: ${{ inputs.nightly }}
        run: |
          cargo xtask update-version --major $VER_MAJOR --minor $VER_MINOR --patch $VER_PATCH -b $GITHUB_RUN_NUMBER
          cat version.rc
          cat installer/version.wxi

      - name: Generate pull_request version info
        if: github.event_name == 'pull_request'
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          cargo xtask update-version --major 0 --minor 0 --patch $PR_NUMBER -b $GITHUB_RUN_NUMBER
          cat version.rc
          cat installer/version.wxi

      - name: Build nightly
        if: ${{ inputs.nightly || github.event_name == 'pull_request' }}
        run: |
          cargo xtask build-installer --nightly --release --target gnu

      - name: Build release
        if: ${{ !inputs.nightly && github.event_name != 'pull_request' }}
        run: |
          cargo xtask build-installer --release --target gnu

  build:
    runs-on: windows-latest
    name: Build
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true

      - uses: Swatinem/rust-cache@v2

      - name: Install build dependencies
        run: |
          cargo install --git https://github.com/chewing/libchewing chewing-cli --features sqlite-bundled

      - name: Generate nightly version info
        if: ${{ inputs.nightly }}
        run: |
          cargo xtask update-version --major $env:VER_MAJOR --minor $env:VER_MINOR --patch $env:VER_PATCH -b $env:GITHUB_RUN_NUMBER
          cat version.rc
          cat installer/version.wxi

      - name: Generate pull_request version info
        if: github.event_name == 'pull_request'
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          cargo xtask update-version --major 0 --minor 0 --patch $env:PR_NUMBER -b $env:GITHUB_RUN_NUMBER
          cat version.rc
          cat installer/version.wxi

      - name: Build nightly
        if: ${{ inputs.nightly || github.event_name == 'pull_request' }}
        shell: cmd
        run: |
          cargo xtask build-installer --nightly --release --target msvc

      - name: Build release
        if: ${{ !inputs.nightly && github.event_name != 'pull_request' }}
        shell: cmd
        run: |
          cargo xtask build-installer --release --target msvc

      - uses: actions/upload-artifact@v4
        with:
          name: Installer Artifact
          path: build/installer

  package:
    runs-on: windows-latest
    name: Package
    outputs:
      unsigned-artifact-id: ${{ steps.upload-unsigned.outputs.artifact-id }}
    needs: [build]

    steps:
      - uses: actions/checkout@v5

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      # - name: Start SSH session
      #   uses: luchihoratiu/debug-via-ssh@main
      #   with:
      #     NGROK_AUTH_TOKEN: ${{ secrets.NGROK_TOKEN }}
      #     SSH_PASS: ${{ secrets.SSH_PASS }}
      #     NGROK_REGION: jp

      - uses: Swatinem/rust-cache@v2

      - name: Download Installer Artifact
        uses: actions/download-artifact@v5
        with:
          name: Installer Artifact
          path: build/installer

      - name: Build Package
        shell: cmd
        run: |
          cargo xtask package-installer

      - id: upload-unsigned
        uses: actions/upload-artifact@v4
        with:
          name: Unsigned Installer
          path: |
            dist\windows-chewing-tsf-unsigned.msi
