import { VerticalBox, StandardTableView, Button, TabWidget, HorizontalBox, LineEdit, AboutSlint, StandardButton, GridBox } from "std-widgets.slint";
import { BopomofoKeyboard } from "bopomofo-keyboard.slint";

export struct DictionaryListItem {
    id: int,
    type: string,
    name: string,
}

enum SidePanel {
    dict-info,
    edit-entry,
    hide,
}

export component EditorWindow inherits Window {
    default-font-family: "jf open 粉圓 2.0";
    default-font-weight: 500;
    preferred-height: 500px;
    in property <[[StandardListViewItem]]> dictionaries;
    in property <[[StandardListViewItem]]> entries;
    in property <[[StandardListViewItem]]> dictionary-info;
    out property <int> current-row: table.current-row;
    property <bool> show-dict-info;
    property <bool> show-edit-entry;
    property <SidePanel> side-panel;

    property <string> phrase;
    property <string> bopomofo;
    property <int> freq;

    callback info-clicked(row: [StandardListViewItem]);
    callback edit-dict-clicked(row: [StandardListViewItem]);

    states [
        show-dict-info when tabs.current-index == 0: {
            root.side-panel: SidePanel.dict-info;
        }
        show-edit-entry when tabs.current-index == 1: {
            root.side-panel: SidePanel.edit-entry;
        }
        hide when tabs.current-index == 2: {
            root.side-panel: hide;
        }
    ]

    HorizontalBox {
        tabs := TabWidget {
            Tab {
                title: "管理";
                VerticalBox {
                    HorizontalBox {
                        alignment: start;
                        Button {
                            text: "編輯";
                            enabled: root.current-row >= 0;
                            clicked => {
                                root.edit-dict-clicked(root.dictionaries[root.current-row]);
                                tabs.current-index = 1;
                            }
                        }

                        Button {
                            text: "新增";
                        }

                        Button {
                            text: "匯入";
                        }

                        Button {
                            text: "匯出";
                        }

                        Button {
                            text: "刪除";
                        }

                        Button {
                            text: "重新整理";
                        }
                    }

                    table := StandardTableView {
                        columns: [{ title: "類型", width: 70px }, { title: "名稱" }];
                        rows: root.dictionaries;
                        current-row-changed(current-row) => {
                            root.info-clicked(root.dictionaries[current-row]);
                        }
                    }
                }
            }

            Tab {
                title: "編輯";
                VerticalBox {
                    HorizontalBox {
                        alignment: start;
                        Button {
                            text: "新增";
                            enabled: false;
                        }

                        Button {
                            text: "刪除";
                            enabled: false;
                        }

                        Button {
                            text: "復原";
                            enabled: false;
                        }

                        Button {
                            text: "放棄";
                            enabled: false;
                        }

                        Button {
                            text: "重新整理";
                            enabled: false;
                        }

                        Button {
                            text: "存檔";
                            enabled: false;
                        }
                    }

                    HorizontalBox {
                        LineEdit {
                            placeholder-text: "搜尋";
                            enabled: false;
                        }
                    }

                    StandardTableView {
                        columns: [{ title: "字/詞" }, { title: "注音" }, { title: "詞頻" }];
                        rows: entries;
                        current-row-changed(current-row) => {
                            root.phrase = root.entries[current-row][0].text;
                            root.bopomofo = root.entries[current-row][1].text;
                            root.freq = root.entries[current-row][2].text.to-float();
                        }
                    }
                }
            }

            Tab {
                title: "關於";
                AboutSlint { }
            }
        }

        if root.side-panel == SidePanel.dict-info: HorizontalLayout {
            Path {
                width: 1px;
                height: 100%;
                stroke: Colors.lightgray;
                stroke-width: 1px;
                MoveTo {
                    x: 0;
                    y: 0;
                }

                LineTo {
                    x: 0;
                    y: 100;
                }
            }

            VerticalBox {
                StandardTableView {
                    columns: [{ title: "屬性", width: 100px }, { title: "內容" } ];
                    rows: root.dictionary-info;
                }
            }
        }
        if root.side-panel == SidePanel.edit-entry: HorizontalLayout {
            Path {
                width: 1px;
                height: 100%;
                stroke: Colors.lightgray;
                stroke-width: 1px;
                MoveTo {
                    x: 0;
                    y: 0;
                }

                LineTo {
                    x: 0;
                    y: 100;
                }
            }

            VerticalBox {
                alignment: start;
                Text {
                    text: "字/詞：";
                }

                LineEdit {
                    text: root.phrase;
                }

                Text {
                    text: "注音：";
                }

                bopomofo := LineEdit {
                    text: root.bopomofo;
                }

                Text {
                    text: "詞頻：";
                }

                LineEdit {
                    text: root.freq;
                }

                BopomofoKeyboard {
                    clicked(text) => {
                        bopomofo.clear-focus();
                        bopomofo.text += text;
                    }
                    clear-clicked => {
                        bopomofo.text = "";
                    }
                }
            }
        }
    }
}
